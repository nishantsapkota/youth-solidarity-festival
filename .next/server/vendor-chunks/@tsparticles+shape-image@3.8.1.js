"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@tsparticles+shape-image@3.8.1";
exports.ids = ["vendor-chunks/@tsparticles+shape-image@3.8.1"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/ByteStream.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/ByteStream.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ByteStream: () => (/* binding */ ByteStream)\n/* harmony export */ });\nclass ByteStream {\n    constructor(bytes) {\n        this.pos = 0;\n        this.data = new Uint8ClampedArray(bytes);\n    }\n    getString(count) {\n        const slice = this.data.slice(this.pos, this.pos + count);\n        this.pos += slice.length;\n        return slice.reduce((acc, curr) => acc + String.fromCharCode(curr), \"\");\n    }\n    nextByte() {\n        return this.data[this.pos++];\n    }\n    nextTwoBytes() {\n        const increment = 2, previous = 1, shift = 8;\n        this.pos += increment;\n        return this.data[this.pos - increment] + (this.data[this.pos - previous] << shift);\n    }\n    readSubBlocks() {\n        let blockString = \"\", size = 0;\n        const minCount = 0, emptySize = 0;\n        do {\n            size = this.data[this.pos++];\n            for (let count = size; --count >= minCount; blockString += String.fromCharCode(this.data[this.pos++])) {\n            }\n        } while (size !== emptySize);\n        return blockString;\n    }\n    readSubBlocksBin() {\n        let size = this.data[this.pos], len = 0;\n        const emptySize = 0, increment = 1;\n        for (let offset = 0; size !== emptySize; offset += size + increment, size = this.data[this.pos + offset]) {\n            len += size;\n        }\n        const blockData = new Uint8Array(len);\n        size = this.data[this.pos++];\n        for (let i = 0; size !== emptySize; size = this.data[this.pos++]) {\n            for (let count = size; --count >= emptySize; blockData[i++] = this.data[this.pos++]) {\n            }\n        }\n        return blockData;\n    }\n    skipSubBlocks() {\n        for (const increment = 1, noData = 0; this.data[this.pos] !== noData; this.pos += this.data[this.pos] + increment) {\n        }\n        this.pos++;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRzcGFydGljbGVzK3NoYXBlLWltYWdlQDMuOC4xL25vZGVfbW9kdWxlcy9AdHNwYXJ0aWNsZXMvc2hhcGUtaW1hZ2UvZXNtL0dpZlV0aWxzL0J5dGVTdHJlYW0uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMscUJBQXFCO0FBQ3hEO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsb0JBQW9CO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLG9CQUFvQjtBQUM1QyxtQ0FBbUMsc0JBQXNCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsZ0NBQWdDO0FBQzlFO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvQXBwbGljYXRpb25zL3Byb2plY3RzL3lvdXRoLXNvbGlkYXJpdHktZmVzdGl2YWwvbm9kZV9tb2R1bGVzLy5wbnBtL0B0c3BhcnRpY2xlcytzaGFwZS1pbWFnZUAzLjguMS9ub2RlX21vZHVsZXMvQHRzcGFydGljbGVzL3NoYXBlLWltYWdlL2VzbS9HaWZVdGlscy9CeXRlU3RyZWFtLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBCeXRlU3RyZWFtIHtcbiAgICBjb25zdHJ1Y3RvcihieXRlcykge1xuICAgICAgICB0aGlzLnBvcyA9IDA7XG4gICAgICAgIHRoaXMuZGF0YSA9IG5ldyBVaW50OENsYW1wZWRBcnJheShieXRlcyk7XG4gICAgfVxuICAgIGdldFN0cmluZyhjb3VudCkge1xuICAgICAgICBjb25zdCBzbGljZSA9IHRoaXMuZGF0YS5zbGljZSh0aGlzLnBvcywgdGhpcy5wb3MgKyBjb3VudCk7XG4gICAgICAgIHRoaXMucG9zICs9IHNsaWNlLmxlbmd0aDtcbiAgICAgICAgcmV0dXJuIHNsaWNlLnJlZHVjZSgoYWNjLCBjdXJyKSA9PiBhY2MgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGN1cnIpLCBcIlwiKTtcbiAgICB9XG4gICAgbmV4dEJ5dGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRhdGFbdGhpcy5wb3MrK107XG4gICAgfVxuICAgIG5leHRUd29CeXRlcygpIHtcbiAgICAgICAgY29uc3QgaW5jcmVtZW50ID0gMiwgcHJldmlvdXMgPSAxLCBzaGlmdCA9IDg7XG4gICAgICAgIHRoaXMucG9zICs9IGluY3JlbWVudDtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YVt0aGlzLnBvcyAtIGluY3JlbWVudF0gKyAodGhpcy5kYXRhW3RoaXMucG9zIC0gcHJldmlvdXNdIDw8IHNoaWZ0KTtcbiAgICB9XG4gICAgcmVhZFN1YkJsb2NrcygpIHtcbiAgICAgICAgbGV0IGJsb2NrU3RyaW5nID0gXCJcIiwgc2l6ZSA9IDA7XG4gICAgICAgIGNvbnN0IG1pbkNvdW50ID0gMCwgZW1wdHlTaXplID0gMDtcbiAgICAgICAgZG8ge1xuICAgICAgICAgICAgc2l6ZSA9IHRoaXMuZGF0YVt0aGlzLnBvcysrXTtcbiAgICAgICAgICAgIGZvciAobGV0IGNvdW50ID0gc2l6ZTsgLS1jb3VudCA+PSBtaW5Db3VudDsgYmxvY2tTdHJpbmcgKz0gU3RyaW5nLmZyb21DaGFyQ29kZSh0aGlzLmRhdGFbdGhpcy5wb3MrK10pKSB7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gd2hpbGUgKHNpemUgIT09IGVtcHR5U2l6ZSk7XG4gICAgICAgIHJldHVybiBibG9ja1N0cmluZztcbiAgICB9XG4gICAgcmVhZFN1YkJsb2Nrc0JpbigpIHtcbiAgICAgICAgbGV0IHNpemUgPSB0aGlzLmRhdGFbdGhpcy5wb3NdLCBsZW4gPSAwO1xuICAgICAgICBjb25zdCBlbXB0eVNpemUgPSAwLCBpbmNyZW1lbnQgPSAxO1xuICAgICAgICBmb3IgKGxldCBvZmZzZXQgPSAwOyBzaXplICE9PSBlbXB0eVNpemU7IG9mZnNldCArPSBzaXplICsgaW5jcmVtZW50LCBzaXplID0gdGhpcy5kYXRhW3RoaXMucG9zICsgb2Zmc2V0XSkge1xuICAgICAgICAgICAgbGVuICs9IHNpemU7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgYmxvY2tEYXRhID0gbmV3IFVpbnQ4QXJyYXkobGVuKTtcbiAgICAgICAgc2l6ZSA9IHRoaXMuZGF0YVt0aGlzLnBvcysrXTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IHNpemUgIT09IGVtcHR5U2l6ZTsgc2l6ZSA9IHRoaXMuZGF0YVt0aGlzLnBvcysrXSkge1xuICAgICAgICAgICAgZm9yIChsZXQgY291bnQgPSBzaXplOyAtLWNvdW50ID49IGVtcHR5U2l6ZTsgYmxvY2tEYXRhW2krK10gPSB0aGlzLmRhdGFbdGhpcy5wb3MrK10pIHtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYmxvY2tEYXRhO1xuICAgIH1cbiAgICBza2lwU3ViQmxvY2tzKCkge1xuICAgICAgICBmb3IgKGNvbnN0IGluY3JlbWVudCA9IDEsIG5vRGF0YSA9IDA7IHRoaXMuZGF0YVt0aGlzLnBvc10gIT09IG5vRGF0YTsgdGhpcy5wb3MgKz0gdGhpcy5kYXRhW3RoaXMucG9zXSArIGluY3JlbWVudCkge1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucG9zKys7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/ByteStream.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Constants.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Constants.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InterlaceOffsets: () => (/* binding */ InterlaceOffsets),\n/* harmony export */   InterlaceSteps: () => (/* binding */ InterlaceSteps)\n/* harmony export */ });\nconst InterlaceOffsets = [0, 4, 2, 1];\nconst InterlaceSteps = [8, 8, 4, 2];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRzcGFydGljbGVzK3NoYXBlLWltYWdlQDMuOC4xL25vZGVfbW9kdWxlcy9AdHNwYXJ0aWNsZXMvc2hhcGUtaW1hZ2UvZXNtL0dpZlV0aWxzL0NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPO0FBQ0EiLCJzb3VyY2VzIjpbIi9BcHBsaWNhdGlvbnMvcHJvamVjdHMveW91dGgtc29saWRhcml0eS1mZXN0aXZhbC9ub2RlX21vZHVsZXMvLnBucG0vQHRzcGFydGljbGVzK3NoYXBlLWltYWdlQDMuOC4xL25vZGVfbW9kdWxlcy9AdHNwYXJ0aWNsZXMvc2hhcGUtaW1hZ2UvZXNtL0dpZlV0aWxzL0NvbnN0YW50cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgSW50ZXJsYWNlT2Zmc2V0cyA9IFswLCA0LCAyLCAxXTtcbmV4cG9ydCBjb25zdCBJbnRlcmxhY2VTdGVwcyA9IFs4LCA4LCA0LCAyXTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Enums/DisposalMethod.js":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Enums/DisposalMethod.js ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DisposalMethod: () => (/* binding */ DisposalMethod)\n/* harmony export */ });\nvar DisposalMethod;\n(function (DisposalMethod) {\n    DisposalMethod[DisposalMethod[\"Replace\"] = 0] = \"Replace\";\n    DisposalMethod[DisposalMethod[\"Combine\"] = 1] = \"Combine\";\n    DisposalMethod[DisposalMethod[\"RestoreBackground\"] = 2] = \"RestoreBackground\";\n    DisposalMethod[DisposalMethod[\"RestorePrevious\"] = 3] = \"RestorePrevious\";\n    DisposalMethod[DisposalMethod[\"UndefinedA\"] = 4] = \"UndefinedA\";\n    DisposalMethod[DisposalMethod[\"UndefinedB\"] = 5] = \"UndefinedB\";\n    DisposalMethod[DisposalMethod[\"UndefinedC\"] = 6] = \"UndefinedC\";\n    DisposalMethod[DisposalMethod[\"UndefinedD\"] = 7] = \"UndefinedD\";\n})(DisposalMethod || (DisposalMethod = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRzcGFydGljbGVzK3NoYXBlLWltYWdlQDMuOC4xL25vZGVfbW9kdWxlcy9AdHNwYXJ0aWNsZXMvc2hhcGUtaW1hZ2UvZXNtL0dpZlV0aWxzL0VudW1zL0Rpc3Bvc2FsTWV0aG9kLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsd0NBQXdDIiwic291cmNlcyI6WyIvQXBwbGljYXRpb25zL3Byb2plY3RzL3lvdXRoLXNvbGlkYXJpdHktZmVzdGl2YWwvbm9kZV9tb2R1bGVzLy5wbnBtL0B0c3BhcnRpY2xlcytzaGFwZS1pbWFnZUAzLjguMS9ub2RlX21vZHVsZXMvQHRzcGFydGljbGVzL3NoYXBlLWltYWdlL2VzbS9HaWZVdGlscy9FbnVtcy9EaXNwb3NhbE1ldGhvZC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgdmFyIERpc3Bvc2FsTWV0aG9kO1xuKGZ1bmN0aW9uIChEaXNwb3NhbE1ldGhvZCkge1xuICAgIERpc3Bvc2FsTWV0aG9kW0Rpc3Bvc2FsTWV0aG9kW1wiUmVwbGFjZVwiXSA9IDBdID0gXCJSZXBsYWNlXCI7XG4gICAgRGlzcG9zYWxNZXRob2RbRGlzcG9zYWxNZXRob2RbXCJDb21iaW5lXCJdID0gMV0gPSBcIkNvbWJpbmVcIjtcbiAgICBEaXNwb3NhbE1ldGhvZFtEaXNwb3NhbE1ldGhvZFtcIlJlc3RvcmVCYWNrZ3JvdW5kXCJdID0gMl0gPSBcIlJlc3RvcmVCYWNrZ3JvdW5kXCI7XG4gICAgRGlzcG9zYWxNZXRob2RbRGlzcG9zYWxNZXRob2RbXCJSZXN0b3JlUHJldmlvdXNcIl0gPSAzXSA9IFwiUmVzdG9yZVByZXZpb3VzXCI7XG4gICAgRGlzcG9zYWxNZXRob2RbRGlzcG9zYWxNZXRob2RbXCJVbmRlZmluZWRBXCJdID0gNF0gPSBcIlVuZGVmaW5lZEFcIjtcbiAgICBEaXNwb3NhbE1ldGhvZFtEaXNwb3NhbE1ldGhvZFtcIlVuZGVmaW5lZEJcIl0gPSA1XSA9IFwiVW5kZWZpbmVkQlwiO1xuICAgIERpc3Bvc2FsTWV0aG9kW0Rpc3Bvc2FsTWV0aG9kW1wiVW5kZWZpbmVkQ1wiXSA9IDZdID0gXCJVbmRlZmluZWRDXCI7XG4gICAgRGlzcG9zYWxNZXRob2RbRGlzcG9zYWxNZXRob2RbXCJVbmRlZmluZWREXCJdID0gN10gPSBcIlVuZGVmaW5lZERcIjtcbn0pKERpc3Bvc2FsTWV0aG9kIHx8IChEaXNwb3NhbE1ldGhvZCA9IHt9KSk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Enums/DisposalMethod.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Types/GIFDataHeaders.js":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Types/GIFDataHeaders.js ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GIFDataHeaders: () => (/* binding */ GIFDataHeaders)\n/* harmony export */ });\nvar GIFDataHeaders;\n(function (GIFDataHeaders) {\n    GIFDataHeaders[GIFDataHeaders[\"Extension\"] = 33] = \"Extension\";\n    GIFDataHeaders[GIFDataHeaders[\"ApplicationExtension\"] = 255] = \"ApplicationExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"GraphicsControlExtension\"] = 249] = \"GraphicsControlExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"PlainTextExtension\"] = 1] = \"PlainTextExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"CommentExtension\"] = 254] = \"CommentExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"Image\"] = 44] = \"Image\";\n    GIFDataHeaders[GIFDataHeaders[\"EndOfFile\"] = 59] = \"EndOfFile\";\n})(GIFDataHeaders || (GIFDataHeaders = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRzcGFydGljbGVzK3NoYXBlLWltYWdlQDMuOC4xL25vZGVfbW9kdWxlcy9AdHNwYXJ0aWNsZXMvc2hhcGUtaW1hZ2UvZXNtL0dpZlV0aWxzL1R5cGVzL0dJRkRhdGFIZWFkZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHdDQUF3QyIsInNvdXJjZXMiOlsiL0FwcGxpY2F0aW9ucy9wcm9qZWN0cy95b3V0aC1zb2xpZGFyaXR5LWZlc3RpdmFsL25vZGVfbW9kdWxlcy8ucG5wbS9AdHNwYXJ0aWNsZXMrc2hhcGUtaW1hZ2VAMy44LjEvbm9kZV9tb2R1bGVzL0B0c3BhcnRpY2xlcy9zaGFwZS1pbWFnZS9lc20vR2lmVXRpbHMvVHlwZXMvR0lGRGF0YUhlYWRlcnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHZhciBHSUZEYXRhSGVhZGVycztcbihmdW5jdGlvbiAoR0lGRGF0YUhlYWRlcnMpIHtcbiAgICBHSUZEYXRhSGVhZGVyc1tHSUZEYXRhSGVhZGVyc1tcIkV4dGVuc2lvblwiXSA9IDMzXSA9IFwiRXh0ZW5zaW9uXCI7XG4gICAgR0lGRGF0YUhlYWRlcnNbR0lGRGF0YUhlYWRlcnNbXCJBcHBsaWNhdGlvbkV4dGVuc2lvblwiXSA9IDI1NV0gPSBcIkFwcGxpY2F0aW9uRXh0ZW5zaW9uXCI7XG4gICAgR0lGRGF0YUhlYWRlcnNbR0lGRGF0YUhlYWRlcnNbXCJHcmFwaGljc0NvbnRyb2xFeHRlbnNpb25cIl0gPSAyNDldID0gXCJHcmFwaGljc0NvbnRyb2xFeHRlbnNpb25cIjtcbiAgICBHSUZEYXRhSGVhZGVyc1tHSUZEYXRhSGVhZGVyc1tcIlBsYWluVGV4dEV4dGVuc2lvblwiXSA9IDFdID0gXCJQbGFpblRleHRFeHRlbnNpb25cIjtcbiAgICBHSUZEYXRhSGVhZGVyc1tHSUZEYXRhSGVhZGVyc1tcIkNvbW1lbnRFeHRlbnNpb25cIl0gPSAyNTRdID0gXCJDb21tZW50RXh0ZW5zaW9uXCI7XG4gICAgR0lGRGF0YUhlYWRlcnNbR0lGRGF0YUhlYWRlcnNbXCJJbWFnZVwiXSA9IDQ0XSA9IFwiSW1hZ2VcIjtcbiAgICBHSUZEYXRhSGVhZGVyc1tHSUZEYXRhSGVhZGVyc1tcIkVuZE9mRmlsZVwiXSA9IDU5XSA9IFwiRW5kT2ZGaWxlXCI7XG59KShHSUZEYXRhSGVhZGVycyB8fCAoR0lGRGF0YUhlYWRlcnMgPSB7fSkpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Types/GIFDataHeaders.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Utils.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Utils.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeGIF: () => (/* binding */ decodeGIF),\n/* harmony export */   drawGif: () => (/* binding */ drawGif),\n/* harmony export */   getGIFLoopAmount: () => (/* binding */ getGIFLoopAmount),\n/* harmony export */   loadGifImage: () => (/* binding */ loadGifImage)\n/* harmony export */ });\n/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Utils.js */ \"(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/Utils.js\");\n/* harmony import */ var _Constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Constants.js */ \"(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Constants.js\");\n/* harmony import */ var _ByteStream_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ByteStream.js */ \"(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/ByteStream.js\");\n/* harmony import */ var _Enums_DisposalMethod_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Enums/DisposalMethod.js */ \"(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Enums/DisposalMethod.js\");\n/* harmony import */ var _Types_GIFDataHeaders_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Types/GIFDataHeaders.js */ \"(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Types/GIFDataHeaders.js\");\n\n\n\n\n\nconst origin = {\n    x: 0,\n    y: 0,\n}, defaultFrame = 0, half = 0.5, initialTime = 0, firstIndex = 0, defaultLoopCount = 0;\nfunction parseColorTable(byteStream, count) {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n        colors.push({\n            r: byteStream.data[byteStream.pos],\n            g: byteStream.data[byteStream.pos + 1],\n            b: byteStream.data[byteStream.pos + 2],\n        });\n        byteStream.pos += 3;\n    }\n    return colors;\n}\nfunction parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex) {\n    switch (byteStream.nextByte()) {\n        case _Types_GIFDataHeaders_js__WEBPACK_IMPORTED_MODULE_4__.GIFDataHeaders.GraphicsControlExtension: {\n            const frame = gif.frames[getFrameIndex(false)];\n            byteStream.pos++;\n            const packedByte = byteStream.nextByte();\n            frame.GCreserved = (packedByte & 0xe0) >>> 5;\n            frame.disposalMethod = (packedByte & 0x1c) >>> 2;\n            frame.userInputDelayFlag = (packedByte & 2) === 2;\n            const transparencyFlag = (packedByte & 1) === 1;\n            frame.delayTime = byteStream.nextTwoBytes() * 0xa;\n            const transparencyIndex = byteStream.nextByte();\n            if (transparencyFlag) {\n                getTransparencyIndex(transparencyIndex);\n            }\n            byteStream.pos++;\n            break;\n        }\n        case _Types_GIFDataHeaders_js__WEBPACK_IMPORTED_MODULE_4__.GIFDataHeaders.ApplicationExtension: {\n            byteStream.pos++;\n            const applicationExtension = {\n                identifier: byteStream.getString(8),\n                authenticationCode: byteStream.getString(3),\n                data: byteStream.readSubBlocksBin(),\n            };\n            gif.applicationExtensions.push(applicationExtension);\n            break;\n        }\n        case _Types_GIFDataHeaders_js__WEBPACK_IMPORTED_MODULE_4__.GIFDataHeaders.CommentExtension: {\n            gif.comments.push([getFrameIndex(false), byteStream.readSubBlocks()]);\n            break;\n        }\n        case _Types_GIFDataHeaders_js__WEBPACK_IMPORTED_MODULE_4__.GIFDataHeaders.PlainTextExtension: {\n            if (gif.globalColorTable.length === 0) {\n                throw new EvalError(\"plain text extension without global color table\");\n            }\n            byteStream.pos++;\n            gif.frames[getFrameIndex(false)].plainTextData = {\n                left: byteStream.nextTwoBytes(),\n                top: byteStream.nextTwoBytes(),\n                width: byteStream.nextTwoBytes(),\n                height: byteStream.nextTwoBytes(),\n                charSize: {\n                    width: byteStream.nextTwoBytes(),\n                    height: byteStream.nextTwoBytes(),\n                },\n                foregroundColor: byteStream.nextByte(),\n                backgroundColor: byteStream.nextByte(),\n                text: byteStream.readSubBlocks(),\n            };\n            break;\n        }\n        default:\n            byteStream.skipSubBlocks();\n            break;\n    }\n}\nasync function parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    const frame = gif.frames[getFrameIndex(true)];\n    frame.left = byteStream.nextTwoBytes();\n    frame.top = byteStream.nextTwoBytes();\n    frame.width = byteStream.nextTwoBytes();\n    frame.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), localColorTableFlag = (packedByte & 0x80) === 0x80, interlacedFlag = (packedByte & 0x40) === 0x40;\n    frame.sortFlag = (packedByte & 0x20) === 0x20;\n    frame.reserved = (packedByte & 0x18) >>> 3;\n    const localColorCount = 1 << ((packedByte & 7) + 1);\n    if (localColorTableFlag) {\n        frame.localColorTable = parseColorTable(byteStream, localColorCount);\n    }\n    const getColor = (index) => {\n        const { r, g, b } = (localColorTableFlag ? frame.localColorTable : gif.globalColorTable)[index];\n        if (index !== getTransparencyIndex(null)) {\n            return { r, g, b, a: 255 };\n        }\n        return { r, g, b, a: avgAlpha ? ~~((r + g + b) / 3) : 0 };\n    };\n    const image = (() => {\n        try {\n            return new ImageData(frame.width, frame.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (image == null) {\n        throw new EvalError(\"GIF frame size is to large\");\n    }\n    const minCodeSize = byteStream.nextByte(), imageData = byteStream.readSubBlocksBin(), clearCode = 1 << minCodeSize;\n    const readBits = (pos, len) => {\n        const bytePos = pos >>> 3, bitPos = pos & 7;\n        return (((imageData[bytePos] + (imageData[bytePos + 1] << 8) + (imageData[bytePos + 2] << 16)) &\n            (((1 << len) - 1) << bitPos)) >>>\n            bitPos);\n    };\n    if (interlacedFlag) {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pass = 0; pass < 4; pass++) {\n            if (_Constants_js__WEBPACK_IMPORTED_MODULE_1__.InterlaceOffsets[pass] < frame.height) {\n                let pixelPos = 0, lineIndex = 0, exit = false;\n                while (!exit) {\n                    const last = code;\n                    code = readBits(pos, size);\n                    pos += size + 1;\n                    if (code === clearCode) {\n                        size = minCodeSize + 1;\n                        dic.length = clearCode + 2;\n                        for (let i = 0; i < dic.length; i++) {\n                            dic[i] = i < clearCode ? [i] : [];\n                        }\n                    }\n                    else {\n                        if (code >= dic.length) {\n                            dic.push(dic[last].concat(dic[last][0]));\n                        }\n                        else if (last !== clearCode) {\n                            dic.push(dic[last].concat(dic[code][0]));\n                        }\n                        for (const item of dic[code]) {\n                            const { r, g, b, a } = getColor(item);\n                            image.data.set([r, g, b, a], _Constants_js__WEBPACK_IMPORTED_MODULE_1__.InterlaceOffsets[pass] * frame.width +\n                                _Constants_js__WEBPACK_IMPORTED_MODULE_1__.InterlaceSteps[pass] * lineIndex +\n                                (pixelPos % (frame.width * 4)));\n                            pixelPos += 4;\n                        }\n                        if (dic.length === 1 << size && size < 0xc) {\n                            size++;\n                        }\n                    }\n                    if (pixelPos === frame.width * 4 * (lineIndex + 1)) {\n                        lineIndex++;\n                        if (_Constants_js__WEBPACK_IMPORTED_MODULE_1__.InterlaceOffsets[pass] + _Constants_js__WEBPACK_IMPORTED_MODULE_1__.InterlaceSteps[pass] * lineIndex >= frame.height) {\n                            exit = true;\n                        }\n                    }\n                }\n            }\n            progressCallback?.(byteStream.pos / (byteStream.data.length - 1), getFrameIndex(false) + 1, image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n    }\n    else {\n        let code = 0, size = minCodeSize + 1, pos = 0, pixelPos = -4, exit = false;\n        const dic = [[0]];\n        while (!exit) {\n            const last = code;\n            code = readBits(pos, size);\n            pos += size;\n            if (code === clearCode) {\n                size = minCodeSize + 1;\n                dic.length = clearCode + 2;\n                for (let i = 0; i < dic.length; i++) {\n                    dic[i] = i < clearCode ? [i] : [];\n                }\n            }\n            else {\n                if (code === clearCode + 1) {\n                    exit = true;\n                    break;\n                }\n                if (code >= dic.length) {\n                    dic.push(dic[last].concat(dic[last][0]));\n                }\n                else if (last !== clearCode) {\n                    dic.push(dic[last].concat(dic[code][0]));\n                }\n                for (const item of dic[code]) {\n                    const { r, g, b, a } = getColor(item);\n                    image.data.set([r, g, b, a], (pixelPos += 4));\n                }\n                if (dic.length >= 1 << size && size < 0xc) {\n                    size++;\n                }\n            }\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n        progressCallback?.((byteStream.pos + 1) / byteStream.data.length, getFrameIndex(false) + 1, frame.image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n    }\n}\nasync function parseBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    switch (byteStream.nextByte()) {\n        case _Types_GIFDataHeaders_js__WEBPACK_IMPORTED_MODULE_4__.GIFDataHeaders.EndOfFile:\n            return true;\n        case _Types_GIFDataHeaders_js__WEBPACK_IMPORTED_MODULE_4__.GIFDataHeaders.Image:\n            await parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback);\n            break;\n        case _Types_GIFDataHeaders_js__WEBPACK_IMPORTED_MODULE_4__.GIFDataHeaders.Extension:\n            parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex);\n            break;\n        default:\n            throw new EvalError(\"undefined block found\");\n    }\n    return false;\n}\nfunction getGIFLoopAmount(gif) {\n    for (const extension of gif.applicationExtensions) {\n        if (extension.identifier + extension.authenticationCode !== \"NETSCAPE2.0\") {\n            continue;\n        }\n        return extension.data[1] + (extension.data[2] << 8);\n    }\n    return NaN;\n}\nasync function decodeGIF(gifURL, progressCallback, avgAlpha) {\n    if (!avgAlpha)\n        avgAlpha = false;\n    const res = await fetch(gifURL);\n    if (!res.ok && res.status === 404) {\n        throw new EvalError(\"file not found\");\n    }\n    const buffer = await res.arrayBuffer();\n    const gif = {\n        width: 0,\n        height: 0,\n        totalTime: 0,\n        colorRes: 0,\n        pixelAspectRatio: 0,\n        frames: [],\n        sortFlag: false,\n        globalColorTable: [],\n        backgroundImage: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n        comments: [],\n        applicationExtensions: [],\n    }, byteStream = new _ByteStream_js__WEBPACK_IMPORTED_MODULE_2__.ByteStream(new Uint8ClampedArray(buffer));\n    if (byteStream.getString(6) !== \"GIF89a\") {\n        throw new Error(\"not a supported GIF file\");\n    }\n    gif.width = byteStream.nextTwoBytes();\n    gif.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), globalColorTableFlag = (packedByte & 0x80) === 0x80;\n    gif.colorRes = (packedByte & 0x70) >>> 4;\n    gif.sortFlag = (packedByte & 8) === 8;\n    const globalColorCount = 1 << ((packedByte & 7) + 1), backgroundColorIndex = byteStream.nextByte();\n    gif.pixelAspectRatio = byteStream.nextByte();\n    if (gif.pixelAspectRatio !== 0) {\n        gif.pixelAspectRatio = (gif.pixelAspectRatio + 0xf) / 0x40;\n    }\n    if (globalColorTableFlag) {\n        gif.globalColorTable = parseColorTable(byteStream, globalColorCount);\n    }\n    const backgroundImage = (() => {\n        try {\n            return new ImageData(gif.width, gif.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (backgroundImage == null) {\n        throw new Error(\"GIF frame size is to large\");\n    }\n    const { r, g, b } = gif.globalColorTable[backgroundColorIndex];\n    backgroundImage.data.set(globalColorTableFlag ? [r, g, b, 255] : [0, 0, 0, 0]);\n    for (let i = 4; i < backgroundImage.data.length; i *= 2) {\n        backgroundImage.data.copyWithin(i, 0, i);\n    }\n    gif.backgroundImage = backgroundImage;\n    let frameIndex = -1, incrementFrameIndex = true, transparencyIndex = -1;\n    const getframeIndex = (increment) => {\n        if (increment) {\n            incrementFrameIndex = true;\n        }\n        return frameIndex;\n    };\n    const getTransparencyIndex = (newValue) => {\n        if (newValue != null) {\n            transparencyIndex = newValue;\n        }\n        return transparencyIndex;\n    };\n    try {\n        do {\n            if (incrementFrameIndex) {\n                gif.frames.push({\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0,\n                    disposalMethod: _Enums_DisposalMethod_js__WEBPACK_IMPORTED_MODULE_3__.DisposalMethod.Replace,\n                    image: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n                    plainTextData: null,\n                    userInputDelayFlag: false,\n                    delayTime: 0,\n                    sortFlag: false,\n                    localColorTable: [],\n                    reserved: 0,\n                    GCreserved: 0,\n                });\n                frameIndex++;\n                transparencyIndex = -1;\n                incrementFrameIndex = false;\n            }\n        } while (!(await parseBlock(byteStream, gif, avgAlpha, getframeIndex, getTransparencyIndex, progressCallback)));\n        gif.frames.length--;\n        for (const frame of gif.frames) {\n            if (frame.userInputDelayFlag && frame.delayTime === 0) {\n                gif.totalTime = Infinity;\n                break;\n            }\n            gif.totalTime += frame.delayTime;\n        }\n        return gif;\n    }\n    catch (error) {\n        if (error instanceof EvalError) {\n            throw new Error(`error while parsing frame ${frameIndex} \"${error.message}\"`);\n        }\n        throw error;\n    }\n}\nfunction drawGif(data) {\n    const { context, radius, particle, delta } = data, image = particle.image;\n    if (!image?.gifData || !image.gif) {\n        return;\n    }\n    const offscreenCanvas = new OffscreenCanvas(image.gifData.width, image.gifData.height), offscreenContext = offscreenCanvas.getContext(\"2d\");\n    if (!offscreenContext) {\n        throw new Error(\"could not create offscreen canvas context\");\n    }\n    offscreenContext.imageSmoothingQuality = \"low\";\n    offscreenContext.imageSmoothingEnabled = false;\n    offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n    if (particle.gifLoopCount === undefined) {\n        particle.gifLoopCount = image.gifLoopCount ?? defaultLoopCount;\n    }\n    let frameIndex = particle.gifFrame ?? defaultFrame;\n    const pos = { x: -image.gifData.width * half, y: -image.gifData.height * half }, frame = image.gifData.frames[frameIndex];\n    if (particle.gifTime === undefined) {\n        particle.gifTime = initialTime;\n    }\n    if (!frame.bitmap) {\n        return;\n    }\n    context.scale(radius / image.gifData.width, radius / image.gifData.height);\n    switch (frame.disposalMethod) {\n        case _Enums_DisposalMethod_js__WEBPACK_IMPORTED_MODULE_3__.DisposalMethod.UndefinedA:\n        case _Enums_DisposalMethod_js__WEBPACK_IMPORTED_MODULE_3__.DisposalMethod.UndefinedB:\n        case _Enums_DisposalMethod_js__WEBPACK_IMPORTED_MODULE_3__.DisposalMethod.UndefinedC:\n        case _Enums_DisposalMethod_js__WEBPACK_IMPORTED_MODULE_3__.DisposalMethod.UndefinedD:\n        case _Enums_DisposalMethod_js__WEBPACK_IMPORTED_MODULE_3__.DisposalMethod.Replace:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n            break;\n        case _Enums_DisposalMethod_js__WEBPACK_IMPORTED_MODULE_3__.DisposalMethod.Combine:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            break;\n        case _Enums_DisposalMethod_js__WEBPACK_IMPORTED_MODULE_3__.DisposalMethod.RestoreBackground:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n            if (!image.gifData.globalColorTable.length) {\n                offscreenContext.putImageData(image.gifData.frames[firstIndex].image, pos.x + frame.left, pos.y + frame.top);\n            }\n            else {\n                offscreenContext.putImageData(image.gifData.backgroundImage, pos.x, pos.y);\n            }\n            break;\n        case _Enums_DisposalMethod_js__WEBPACK_IMPORTED_MODULE_3__.DisposalMethod.RestorePrevious:\n            {\n                const previousImageData = offscreenContext.getImageData(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n                offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                context.drawImage(offscreenCanvas, pos.x, pos.y);\n                offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n                offscreenContext.putImageData(previousImageData, origin.x, origin.y);\n            }\n            break;\n    }\n    particle.gifTime += delta.value;\n    if (particle.gifTime > frame.delayTime) {\n        particle.gifTime -= frame.delayTime;\n        if (++frameIndex >= image.gifData.frames.length) {\n            if (--particle.gifLoopCount <= defaultLoopCount) {\n                return;\n            }\n            frameIndex = firstIndex;\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n        }\n        particle.gifFrame = frameIndex;\n    }\n    context.scale(image.gifData.width / radius, image.gifData.height / radius);\n}\nasync function loadGifImage(image) {\n    if (image.type !== \"gif\") {\n        await (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.loadImage)(image);\n        return;\n    }\n    image.loading = true;\n    try {\n        image.gifData = await decodeGIF(image.source);\n        image.gifLoopCount = getGIFLoopAmount(image.gifData) ?? defaultLoopCount;\n        if (!image.gifLoopCount) {\n            image.gifLoopCount = Infinity;\n        }\n    }\n    catch {\n        image.error = true;\n    }\n    image.loading = false;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/ImageDrawer.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/ImageDrawer.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ImageDrawer: () => (/* binding */ ImageDrawer)\n/* harmony export */ });\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ \"(ssr)/./node_modules/.pnpm/@tsparticles+engine@3.8.1/node_modules/@tsparticles/engine/esm/index.js\");\n/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Utils.js */ \"(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/Utils.js\");\n/* harmony import */ var _GifUtils_Utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./GifUtils/Utils.js */ \"(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Utils.js\");\n\n\n\nconst double = 2, defaultAlpha = 1, sides = 12, defaultRatio = 1;\nclass ImageDrawer {\n    constructor(engine) {\n        this.validTypes = [\"image\", \"images\"];\n        this.loadImageShape = async (imageShape) => {\n            if (!this._engine.loadImage) {\n                throw new Error(`${_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.errorPrefix} image shape not initialized`);\n            }\n            await this._engine.loadImage({\n                gif: imageShape.gif,\n                name: imageShape.name,\n                replaceColor: imageShape.replaceColor ?? false,\n                src: imageShape.src,\n            });\n        };\n        this._engine = engine;\n    }\n    addImage(image) {\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        this._engine.images.push(image);\n    }\n    draw(data) {\n        const { context, radius, particle, opacity } = data, image = particle.image, element = image?.element;\n        if (!image) {\n            return;\n        }\n        context.globalAlpha = opacity;\n        if (image.gif && image.gifData) {\n            (0,_GifUtils_Utils_js__WEBPACK_IMPORTED_MODULE_2__.drawGif)(data);\n        }\n        else if (element) {\n            const ratio = image.ratio, pos = {\n                x: -radius,\n                y: -radius,\n            }, diameter = radius * double;\n            context.drawImage(element, pos.x, pos.y, diameter, diameter / ratio);\n        }\n        context.globalAlpha = defaultAlpha;\n    }\n    getSidesCount() {\n        return sides;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (!options.preload || !this._engine.loadImage) {\n            return;\n        }\n        for (const imageData of options.preload) {\n            await this._engine.loadImage(imageData);\n        }\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const imageData = particle.shapeData;\n        if (!imageData) {\n            return;\n        }\n        const image = this._engine.images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            void this.loadImageShape(imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const images = this._engine.images, imageData = particle.shapeData;\n        if (!imageData) {\n            return;\n        }\n        const color = particle.getFillColor(), image = images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        const replaceColor = imageData.replaceColor ?? image.replaceColor;\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        void (async () => {\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await (0,_Utils_js__WEBPACK_IMPORTED_MODULE_1__.replaceImageColor)(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    gif: image.gif,\n                    gifData: image.gifData,\n                    gifLoopCount: image.gifLoopCount,\n                    loaded: true,\n                    ratio: imageData.width && imageData.height\n                        ? imageData.width / imageData.height\n                        : (image.ratio ?? defaultRatio),\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = imageData.fill ?? particle.shapeFill, close = imageData.close ?? particle.shapeClose, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.shapeFill = imageShape.fill;\n            particle.shapeClose = imageShape.close;\n        })();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRzcGFydGljbGVzK3NoYXBlLWltYWdlQDMuOC4xL25vZGVfbW9kdWxlcy9AdHNwYXJ0aWNsZXMvc2hhcGUtaW1hZ2UvZXNtL0ltYWdlRHJhd2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBa0Q7QUFDSDtBQUNEO0FBQzlDO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyw0REFBVyxFQUFFO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixxQ0FBcUM7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksMkRBQU87QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyw0REFBaUI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSIsInNvdXJjZXMiOlsiL0FwcGxpY2F0aW9ucy9wcm9qZWN0cy95b3V0aC1zb2xpZGFyaXR5LWZlc3RpdmFsL25vZGVfbW9kdWxlcy8ucG5wbS9AdHNwYXJ0aWNsZXMrc2hhcGUtaW1hZ2VAMy44LjEvbm9kZV9tb2R1bGVzL0B0c3BhcnRpY2xlcy9zaGFwZS1pbWFnZS9lc20vSW1hZ2VEcmF3ZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZXJyb3JQcmVmaXggfSBmcm9tIFwiQHRzcGFydGljbGVzL2VuZ2luZVwiO1xuaW1wb3J0IHsgcmVwbGFjZUltYWdlQ29sb3IgfSBmcm9tIFwiLi9VdGlscy5qc1wiO1xuaW1wb3J0IHsgZHJhd0dpZiB9IGZyb20gXCIuL0dpZlV0aWxzL1V0aWxzLmpzXCI7XG5jb25zdCBkb3VibGUgPSAyLCBkZWZhdWx0QWxwaGEgPSAxLCBzaWRlcyA9IDEyLCBkZWZhdWx0UmF0aW8gPSAxO1xuZXhwb3J0IGNsYXNzIEltYWdlRHJhd2VyIHtcbiAgICBjb25zdHJ1Y3RvcihlbmdpbmUpIHtcbiAgICAgICAgdGhpcy52YWxpZFR5cGVzID0gW1wiaW1hZ2VcIiwgXCJpbWFnZXNcIl07XG4gICAgICAgIHRoaXMubG9hZEltYWdlU2hhcGUgPSBhc3luYyAoaW1hZ2VTaGFwZSkgPT4ge1xuICAgICAgICAgICAgaWYgKCF0aGlzLl9lbmdpbmUubG9hZEltYWdlKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGAke2Vycm9yUHJlZml4fSBpbWFnZSBzaGFwZSBub3QgaW5pdGlhbGl6ZWRgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGF3YWl0IHRoaXMuX2VuZ2luZS5sb2FkSW1hZ2Uoe1xuICAgICAgICAgICAgICAgIGdpZjogaW1hZ2VTaGFwZS5naWYsXG4gICAgICAgICAgICAgICAgbmFtZTogaW1hZ2VTaGFwZS5uYW1lLFxuICAgICAgICAgICAgICAgIHJlcGxhY2VDb2xvcjogaW1hZ2VTaGFwZS5yZXBsYWNlQ29sb3IgPz8gZmFsc2UsXG4gICAgICAgICAgICAgICAgc3JjOiBpbWFnZVNoYXBlLnNyYyxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLl9lbmdpbmUgPSBlbmdpbmU7XG4gICAgfVxuICAgIGFkZEltYWdlKGltYWdlKSB7XG4gICAgICAgIGlmICghdGhpcy5fZW5naW5lLmltYWdlcykge1xuICAgICAgICAgICAgdGhpcy5fZW5naW5lLmltYWdlcyA9IFtdO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2VuZ2luZS5pbWFnZXMucHVzaChpbWFnZSk7XG4gICAgfVxuICAgIGRyYXcoZGF0YSkge1xuICAgICAgICBjb25zdCB7IGNvbnRleHQsIHJhZGl1cywgcGFydGljbGUsIG9wYWNpdHkgfSA9IGRhdGEsIGltYWdlID0gcGFydGljbGUuaW1hZ2UsIGVsZW1lbnQgPSBpbWFnZT8uZWxlbWVudDtcbiAgICAgICAgaWYgKCFpbWFnZSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnRleHQuZ2xvYmFsQWxwaGEgPSBvcGFjaXR5O1xuICAgICAgICBpZiAoaW1hZ2UuZ2lmICYmIGltYWdlLmdpZkRhdGEpIHtcbiAgICAgICAgICAgIGRyYXdHaWYoZGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoZWxlbWVudCkge1xuICAgICAgICAgICAgY29uc3QgcmF0aW8gPSBpbWFnZS5yYXRpbywgcG9zID0ge1xuICAgICAgICAgICAgICAgIHg6IC1yYWRpdXMsXG4gICAgICAgICAgICAgICAgeTogLXJhZGl1cyxcbiAgICAgICAgICAgIH0sIGRpYW1ldGVyID0gcmFkaXVzICogZG91YmxlO1xuICAgICAgICAgICAgY29udGV4dC5kcmF3SW1hZ2UoZWxlbWVudCwgcG9zLngsIHBvcy55LCBkaWFtZXRlciwgZGlhbWV0ZXIgLyByYXRpbyk7XG4gICAgICAgIH1cbiAgICAgICAgY29udGV4dC5nbG9iYWxBbHBoYSA9IGRlZmF1bHRBbHBoYTtcbiAgICB9XG4gICAgZ2V0U2lkZXNDb3VudCgpIHtcbiAgICAgICAgcmV0dXJuIHNpZGVzO1xuICAgIH1cbiAgICBhc3luYyBpbml0KGNvbnRhaW5lcikge1xuICAgICAgICBjb25zdCBvcHRpb25zID0gY29udGFpbmVyLmFjdHVhbE9wdGlvbnM7XG4gICAgICAgIGlmICghb3B0aW9ucy5wcmVsb2FkIHx8ICF0aGlzLl9lbmdpbmUubG9hZEltYWdlKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChjb25zdCBpbWFnZURhdGEgb2Ygb3B0aW9ucy5wcmVsb2FkKSB7XG4gICAgICAgICAgICBhd2FpdCB0aGlzLl9lbmdpbmUubG9hZEltYWdlKGltYWdlRGF0YSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgbG9hZFNoYXBlKHBhcnRpY2xlKSB7XG4gICAgICAgIGlmIChwYXJ0aWNsZS5zaGFwZSAhPT0gXCJpbWFnZVwiICYmIHBhcnRpY2xlLnNoYXBlICE9PSBcImltYWdlc1wiKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0aGlzLl9lbmdpbmUuaW1hZ2VzKSB7XG4gICAgICAgICAgICB0aGlzLl9lbmdpbmUuaW1hZ2VzID0gW107XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgaW1hZ2VEYXRhID0gcGFydGljbGUuc2hhcGVEYXRhO1xuICAgICAgICBpZiAoIWltYWdlRGF0YSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGltYWdlID0gdGhpcy5fZW5naW5lLmltYWdlcy5maW5kKCh0KSA9PiB0Lm5hbWUgPT09IGltYWdlRGF0YS5uYW1lIHx8IHQuc291cmNlID09PSBpbWFnZURhdGEuc3JjKTtcbiAgICAgICAgaWYgKCFpbWFnZSkge1xuICAgICAgICAgICAgdm9pZCB0aGlzLmxvYWRJbWFnZVNoYXBlKGltYWdlRGF0YSkudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5sb2FkU2hhcGUocGFydGljbGUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcGFydGljbGVJbml0KGNvbnRhaW5lciwgcGFydGljbGUpIHtcbiAgICAgICAgaWYgKHBhcnRpY2xlLnNoYXBlICE9PSBcImltYWdlXCIgJiYgcGFydGljbGUuc2hhcGUgIT09IFwiaW1hZ2VzXCIpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXRoaXMuX2VuZ2luZS5pbWFnZXMpIHtcbiAgICAgICAgICAgIHRoaXMuX2VuZ2luZS5pbWFnZXMgPSBbXTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBpbWFnZXMgPSB0aGlzLl9lbmdpbmUuaW1hZ2VzLCBpbWFnZURhdGEgPSBwYXJ0aWNsZS5zaGFwZURhdGE7XG4gICAgICAgIGlmICghaW1hZ2VEYXRhKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY29sb3IgPSBwYXJ0aWNsZS5nZXRGaWxsQ29sb3IoKSwgaW1hZ2UgPSBpbWFnZXMuZmluZCgodCkgPT4gdC5uYW1lID09PSBpbWFnZURhdGEubmFtZSB8fCB0LnNvdXJjZSA9PT0gaW1hZ2VEYXRhLnNyYyk7XG4gICAgICAgIGlmICghaW1hZ2UpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByZXBsYWNlQ29sb3IgPSBpbWFnZURhdGEucmVwbGFjZUNvbG9yID8/IGltYWdlLnJlcGxhY2VDb2xvcjtcbiAgICAgICAgaWYgKGltYWdlLmxvYWRpbmcpIHtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMucGFydGljbGVJbml0KGNvbnRhaW5lciwgcGFydGljbGUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdm9pZCAoYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgbGV0IGltYWdlUmVzO1xuICAgICAgICAgICAgaWYgKGltYWdlLnN2Z0RhdGEgJiYgY29sb3IpIHtcbiAgICAgICAgICAgICAgICBpbWFnZVJlcyA9IGF3YWl0IHJlcGxhY2VJbWFnZUNvbG9yKGltYWdlLCBpbWFnZURhdGEsIGNvbG9yLCBwYXJ0aWNsZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBpbWFnZVJlcyA9IHtcbiAgICAgICAgICAgICAgICAgICAgY29sb3IsXG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IGltYWdlLFxuICAgICAgICAgICAgICAgICAgICBlbGVtZW50OiBpbWFnZS5lbGVtZW50LFxuICAgICAgICAgICAgICAgICAgICBnaWY6IGltYWdlLmdpZixcbiAgICAgICAgICAgICAgICAgICAgZ2lmRGF0YTogaW1hZ2UuZ2lmRGF0YSxcbiAgICAgICAgICAgICAgICAgICAgZ2lmTG9vcENvdW50OiBpbWFnZS5naWZMb29wQ291bnQsXG4gICAgICAgICAgICAgICAgICAgIGxvYWRlZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgcmF0aW86IGltYWdlRGF0YS53aWR0aCAmJiBpbWFnZURhdGEuaGVpZ2h0XG4gICAgICAgICAgICAgICAgICAgICAgICA/IGltYWdlRGF0YS53aWR0aCAvIGltYWdlRGF0YS5oZWlnaHRcbiAgICAgICAgICAgICAgICAgICAgICAgIDogKGltYWdlLnJhdGlvID8/IGRlZmF1bHRSYXRpbyksXG4gICAgICAgICAgICAgICAgICAgIHJlcGxhY2VDb2xvcjogcmVwbGFjZUNvbG9yLFxuICAgICAgICAgICAgICAgICAgICBzb3VyY2U6IGltYWdlRGF0YS5zcmMsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghaW1hZ2VSZXMucmF0aW8pIHtcbiAgICAgICAgICAgICAgICBpbWFnZVJlcy5yYXRpbyA9IDE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBmaWxsID0gaW1hZ2VEYXRhLmZpbGwgPz8gcGFydGljbGUuc2hhcGVGaWxsLCBjbG9zZSA9IGltYWdlRGF0YS5jbG9zZSA/PyBwYXJ0aWNsZS5zaGFwZUNsb3NlLCBpbWFnZVNoYXBlID0ge1xuICAgICAgICAgICAgICAgIGltYWdlOiBpbWFnZVJlcyxcbiAgICAgICAgICAgICAgICBmaWxsLFxuICAgICAgICAgICAgICAgIGNsb3NlLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHBhcnRpY2xlLmltYWdlID0gaW1hZ2VTaGFwZS5pbWFnZTtcbiAgICAgICAgICAgIHBhcnRpY2xlLnNoYXBlRmlsbCA9IGltYWdlU2hhcGUuZmlsbDtcbiAgICAgICAgICAgIHBhcnRpY2xlLnNoYXBlQ2xvc2UgPSBpbWFnZVNoYXBlLmNsb3NlO1xuICAgICAgICB9KSgpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/ImageDrawer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/ImagePreloader.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/ImagePreloader.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ImagePreloaderPlugin: () => (/* binding */ ImagePreloaderPlugin)\n/* harmony export */ });\n/* harmony import */ var _Options_Classes_Preload_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Options/Classes/Preload.js */ \"(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/Options/Classes/Preload.js\");\n\nclass ImagePreloaderPlugin {\n    constructor(engine) {\n        this.id = \"imagePreloader\";\n        this._engine = engine;\n    }\n    async getPlugin() {\n        await Promise.resolve();\n        return {};\n    }\n    loadOptions(options, source) {\n        if (!source?.preload) {\n            return;\n        }\n        if (!options.preload) {\n            options.preload = [];\n        }\n        const preloadOptions = options.preload;\n        for (const item of source.preload) {\n            const existing = preloadOptions.find(t => t.name === item.name || t.src === item.src);\n            if (existing) {\n                existing.load(item);\n            }\n            else {\n                const preload = new _Options_Classes_Preload_js__WEBPACK_IMPORTED_MODULE_0__.Preload();\n                preload.load(item);\n                preloadOptions.push(preload);\n            }\n        }\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRzcGFydGljbGVzK3NoYXBlLWltYWdlQDMuOC4xL25vZGVfbW9kdWxlcy9AdHNwYXJ0aWNsZXMvc2hhcGUtaW1hZ2UvZXNtL0ltYWdlUHJlbG9hZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXVEO0FBQ2hEO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsZ0VBQU87QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvQXBwbGljYXRpb25zL3Byb2plY3RzL3lvdXRoLXNvbGlkYXJpdHktZmVzdGl2YWwvbm9kZV9tb2R1bGVzLy5wbnBtL0B0c3BhcnRpY2xlcytzaGFwZS1pbWFnZUAzLjguMS9ub2RlX21vZHVsZXMvQHRzcGFydGljbGVzL3NoYXBlLWltYWdlL2VzbS9JbWFnZVByZWxvYWRlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcmVsb2FkIH0gZnJvbSBcIi4vT3B0aW9ucy9DbGFzc2VzL1ByZWxvYWQuanNcIjtcbmV4cG9ydCBjbGFzcyBJbWFnZVByZWxvYWRlclBsdWdpbiB7XG4gICAgY29uc3RydWN0b3IoZW5naW5lKSB7XG4gICAgICAgIHRoaXMuaWQgPSBcImltYWdlUHJlbG9hZGVyXCI7XG4gICAgICAgIHRoaXMuX2VuZ2luZSA9IGVuZ2luZTtcbiAgICB9XG4gICAgYXN5bmMgZ2V0UGx1Z2luKCkge1xuICAgICAgICBhd2FpdCBQcm9taXNlLnJlc29sdmUoKTtcbiAgICAgICAgcmV0dXJuIHt9O1xuICAgIH1cbiAgICBsb2FkT3B0aW9ucyhvcHRpb25zLCBzb3VyY2UpIHtcbiAgICAgICAgaWYgKCFzb3VyY2U/LnByZWxvYWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIW9wdGlvbnMucHJlbG9hZCkge1xuICAgICAgICAgICAgb3B0aW9ucy5wcmVsb2FkID0gW107XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcHJlbG9hZE9wdGlvbnMgPSBvcHRpb25zLnByZWxvYWQ7XG4gICAgICAgIGZvciAoY29uc3QgaXRlbSBvZiBzb3VyY2UucHJlbG9hZCkge1xuICAgICAgICAgICAgY29uc3QgZXhpc3RpbmcgPSBwcmVsb2FkT3B0aW9ucy5maW5kKHQgPT4gdC5uYW1lID09PSBpdGVtLm5hbWUgfHwgdC5zcmMgPT09IGl0ZW0uc3JjKTtcbiAgICAgICAgICAgIGlmIChleGlzdGluZykge1xuICAgICAgICAgICAgICAgIGV4aXN0aW5nLmxvYWQoaXRlbSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zdCBwcmVsb2FkID0gbmV3IFByZWxvYWQoKTtcbiAgICAgICAgICAgICAgICBwcmVsb2FkLmxvYWQoaXRlbSk7XG4gICAgICAgICAgICAgICAgcHJlbG9hZE9wdGlvbnMucHVzaChwcmVsb2FkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBuZWVkc1BsdWdpbigpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/ImagePreloader.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/Options/Classes/Preload.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/Options/Classes/Preload.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Preload: () => (/* binding */ Preload)\n/* harmony export */ });\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ \"(ssr)/./node_modules/.pnpm/@tsparticles+engine@3.8.1/node_modules/@tsparticles/engine/esm/index.js\");\n\nclass Preload {\n    constructor() {\n        this.src = \"\";\n        this.gif = false;\n    }\n    load(data) {\n        if ((0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.isNull)(data)) {\n            return;\n        }\n        if (data.gif !== undefined) {\n            this.gif = data.gif;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.replaceColor !== undefined) {\n            this.replaceColor = data.replaceColor;\n        }\n        if (data.src !== undefined) {\n            this.src = data.src;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRzcGFydGljbGVzK3NoYXBlLWltYWdlQDMuOC4xL25vZGVfbW9kdWxlcy9AdHNwYXJ0aWNsZXMvc2hhcGUtaW1hZ2UvZXNtL09wdGlvbnMvQ2xhc3Nlcy9QcmVsb2FkLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTZDO0FBQ3RDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksMkRBQU07QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9BcHBsaWNhdGlvbnMvcHJvamVjdHMveW91dGgtc29saWRhcml0eS1mZXN0aXZhbC9ub2RlX21vZHVsZXMvLnBucG0vQHRzcGFydGljbGVzK3NoYXBlLWltYWdlQDMuOC4xL25vZGVfbW9kdWxlcy9AdHNwYXJ0aWNsZXMvc2hhcGUtaW1hZ2UvZXNtL09wdGlvbnMvQ2xhc3Nlcy9QcmVsb2FkLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzTnVsbCB9IGZyb20gXCJAdHNwYXJ0aWNsZXMvZW5naW5lXCI7XG5leHBvcnQgY2xhc3MgUHJlbG9hZCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuc3JjID0gXCJcIjtcbiAgICAgICAgdGhpcy5naWYgPSBmYWxzZTtcbiAgICB9XG4gICAgbG9hZChkYXRhKSB7XG4gICAgICAgIGlmIChpc051bGwoZGF0YSkpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZGF0YS5naWYgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhpcy5naWYgPSBkYXRhLmdpZjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZGF0YS5oZWlnaHQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhpcy5oZWlnaHQgPSBkYXRhLmhlaWdodDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZGF0YS5uYW1lICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRoaXMubmFtZSA9IGRhdGEubmFtZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZGF0YS5yZXBsYWNlQ29sb3IgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhpcy5yZXBsYWNlQ29sb3IgPSBkYXRhLnJlcGxhY2VDb2xvcjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZGF0YS5zcmMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhpcy5zcmMgPSBkYXRhLnNyYztcbiAgICAgICAgfVxuICAgICAgICBpZiAoZGF0YS53aWR0aCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aGlzLndpZHRoID0gZGF0YS53aWR0aDtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/Options/Classes/Preload.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/Utils.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/Utils.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   downloadSvgImage: () => (/* binding */ downloadSvgImage),\n/* harmony export */   loadImage: () => (/* binding */ loadImage),\n/* harmony export */   replaceImageColor: () => (/* binding */ replaceImageColor)\n/* harmony export */ });\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ \"(ssr)/./node_modules/.pnpm/@tsparticles+engine@3.8.1/node_modules/@tsparticles/engine/esm/index.js\");\n\nconst stringStart = 0, defaultOpacity = 1;\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getStyleFromHsl)(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(stringStart, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nasync function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getLogger)().error(`${_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.errorPrefix} loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nasync function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getLogger)().error(`${_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.errorPrefix} Image not found`);\n        image.error = true;\n    }\n    else {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nfunction replaceImageColor(image, imageData, color, particle) {\n    const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? defaultOpacity), imageRes = {\n        color,\n        gif: imageData.gif,\n        data: {\n            ...image,\n            svgData: svgColoredData,\n        },\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: imageData.replaceColor,\n        source: imageData.src,\n    };\n    return new Promise(resolve => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        const errorHandler = async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = {\n                ...image,\n                error: false,\n                loading: true,\n            };\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        };\n        img.addEventListener(\"error\", () => void errorHandler());\n        img.src = url;\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRzcGFydGljbGVzK3NoYXBlLWltYWdlQDMuOC4xL25vZGVfbW9kdWxlcy9AdHNwYXJ0aWNsZXMvc2hhcGUtaW1hZ2UvZXNtL1V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBOEU7QUFDOUU7QUFDQSx5Q0FBeUMsRUFBRSxFQUFFLElBQUksWUFBWSxFQUFFLCtCQUErQixJQUFJO0FBQ2xHO0FBQ0EsWUFBWSxVQUFVO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixvRUFBZTtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsOENBQThDLFFBQVEsV0FBVyxHQUFHLGdDQUFnQztBQUNsSDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDhEQUFTLFlBQVksNERBQVcsRUFBRSxpQkFBaUIsYUFBYTtBQUM1RTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLDhEQUFTLFlBQVksNERBQVcsRUFBRTtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCx1QkFBdUI7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMIiwic291cmNlcyI6WyIvQXBwbGljYXRpb25zL3Byb2plY3RzL3lvdXRoLXNvbGlkYXJpdHktZmVzdGl2YWwvbm9kZV9tb2R1bGVzLy5wbnBtL0B0c3BhcnRpY2xlcytzaGFwZS1pbWFnZUAzLjguMS9ub2RlX21vZHVsZXMvQHRzcGFydGljbGVzL3NoYXBlLWltYWdlL2VzbS9VdGlscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlcnJvclByZWZpeCwgZ2V0TG9nZ2VyLCBnZXRTdHlsZUZyb21Ic2wgfSBmcm9tIFwiQHRzcGFydGljbGVzL2VuZ2luZVwiO1xuY29uc3Qgc3RyaW5nU3RhcnQgPSAwLCBkZWZhdWx0T3BhY2l0eSA9IDE7XG5jb25zdCBjdXJyZW50Q29sb3JSZWdleCA9IC8oIyg/OlswLTlhLWZdezJ9KXsyLDR9fCgjWzAtOWEtZl17M30pfChyZ2J8aHNsKWE/XFwoKC0/XFxkKyU/WyxcXHNdKyl7MiwzfVxccypbXFxkLl0rJT9cXCkpfGN1cnJlbnRjb2xvci9naTtcbmZ1bmN0aW9uIHJlcGxhY2VDb2xvclN2ZyhpbWFnZVNoYXBlLCBjb2xvciwgb3BhY2l0eSkge1xuICAgIGNvbnN0IHsgc3ZnRGF0YSB9ID0gaW1hZ2VTaGFwZTtcbiAgICBpZiAoIXN2Z0RhdGEpIHtcbiAgICAgICAgcmV0dXJuIFwiXCI7XG4gICAgfVxuICAgIGNvbnN0IGNvbG9yU3R5bGUgPSBnZXRTdHlsZUZyb21Ic2woY29sb3IsIG9wYWNpdHkpO1xuICAgIGlmIChzdmdEYXRhLmluY2x1ZGVzKFwiZmlsbFwiKSkge1xuICAgICAgICByZXR1cm4gc3ZnRGF0YS5yZXBsYWNlKGN1cnJlbnRDb2xvclJlZ2V4LCAoKSA9PiBjb2xvclN0eWxlKTtcbiAgICB9XG4gICAgY29uc3QgcHJlRmlsbEluZGV4ID0gc3ZnRGF0YS5pbmRleE9mKFwiPlwiKTtcbiAgICByZXR1cm4gYCR7c3ZnRGF0YS5zdWJzdHJpbmcoc3RyaW5nU3RhcnQsIHByZUZpbGxJbmRleCl9IGZpbGw9XCIke2NvbG9yU3R5bGV9XCIke3N2Z0RhdGEuc3Vic3RyaW5nKHByZUZpbGxJbmRleCl9YDtcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBsb2FkSW1hZ2UoaW1hZ2UpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgICAgaW1hZ2UubG9hZGluZyA9IHRydWU7XG4gICAgICAgIGNvbnN0IGltZyA9IG5ldyBJbWFnZSgpO1xuICAgICAgICBpbWFnZS5lbGVtZW50ID0gaW1nO1xuICAgICAgICBpbWcuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwgKCkgPT4ge1xuICAgICAgICAgICAgaW1hZ2UubG9hZGluZyA9IGZhbHNlO1xuICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICB9KTtcbiAgICAgICAgaW1nLmFkZEV2ZW50TGlzdGVuZXIoXCJlcnJvclwiLCAoKSA9PiB7XG4gICAgICAgICAgICBpbWFnZS5lbGVtZW50ID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgaW1hZ2UuZXJyb3IgPSB0cnVlO1xuICAgICAgICAgICAgaW1hZ2UubG9hZGluZyA9IGZhbHNlO1xuICAgICAgICAgICAgZ2V0TG9nZ2VyKCkuZXJyb3IoYCR7ZXJyb3JQcmVmaXh9IGxvYWRpbmcgaW1hZ2U6ICR7aW1hZ2Uuc291cmNlfWApO1xuICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICB9KTtcbiAgICAgICAgaW1nLnNyYyA9IGltYWdlLnNvdXJjZTtcbiAgICB9KTtcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBkb3dubG9hZFN2Z0ltYWdlKGltYWdlKSB7XG4gICAgaWYgKGltYWdlLnR5cGUgIT09IFwic3ZnXCIpIHtcbiAgICAgICAgYXdhaXQgbG9hZEltYWdlKGltYWdlKTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpbWFnZS5sb2FkaW5nID0gdHJ1ZTtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGltYWdlLnNvdXJjZSk7XG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICBnZXRMb2dnZXIoKS5lcnJvcihgJHtlcnJvclByZWZpeH0gSW1hZ2Ugbm90IGZvdW5kYCk7XG4gICAgICAgIGltYWdlLmVycm9yID0gdHJ1ZTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGltYWdlLnN2Z0RhdGEgPSBhd2FpdCByZXNwb25zZS50ZXh0KCk7XG4gICAgfVxuICAgIGltYWdlLmxvYWRpbmcgPSBmYWxzZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiByZXBsYWNlSW1hZ2VDb2xvcihpbWFnZSwgaW1hZ2VEYXRhLCBjb2xvciwgcGFydGljbGUpIHtcbiAgICBjb25zdCBzdmdDb2xvcmVkRGF0YSA9IHJlcGxhY2VDb2xvclN2ZyhpbWFnZSwgY29sb3IsIHBhcnRpY2xlLm9wYWNpdHk/LnZhbHVlID8/IGRlZmF1bHRPcGFjaXR5KSwgaW1hZ2VSZXMgPSB7XG4gICAgICAgIGNvbG9yLFxuICAgICAgICBnaWY6IGltYWdlRGF0YS5naWYsXG4gICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIC4uLmltYWdlLFxuICAgICAgICAgICAgc3ZnRGF0YTogc3ZnQ29sb3JlZERhdGEsXG4gICAgICAgIH0sXG4gICAgICAgIGxvYWRlZDogZmFsc2UsXG4gICAgICAgIHJhdGlvOiBpbWFnZURhdGEud2lkdGggLyBpbWFnZURhdGEuaGVpZ2h0LFxuICAgICAgICByZXBsYWNlQ29sb3I6IGltYWdlRGF0YS5yZXBsYWNlQ29sb3IsXG4gICAgICAgIHNvdXJjZTogaW1hZ2VEYXRhLnNyYyxcbiAgICB9O1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICAgY29uc3Qgc3ZnID0gbmV3IEJsb2IoW3N2Z0NvbG9yZWREYXRhXSwgeyB0eXBlOiBcImltYWdlL3N2Zyt4bWxcIiB9KSwgZG9tVXJsID0gVVJMIHx8IHdpbmRvdy5VUkwgfHwgd2luZG93LndlYmtpdFVSTCB8fCB3aW5kb3csIHVybCA9IGRvbVVybC5jcmVhdGVPYmplY3RVUkwoc3ZnKSwgaW1nID0gbmV3IEltYWdlKCk7XG4gICAgICAgIGltZy5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLCAoKSA9PiB7XG4gICAgICAgICAgICBpbWFnZVJlcy5sb2FkZWQgPSB0cnVlO1xuICAgICAgICAgICAgaW1hZ2VSZXMuZWxlbWVudCA9IGltZztcbiAgICAgICAgICAgIHJlc29sdmUoaW1hZ2VSZXMpO1xuICAgICAgICAgICAgZG9tVXJsLnJldm9rZU9iamVjdFVSTCh1cmwpO1xuICAgICAgICB9KTtcbiAgICAgICAgY29uc3QgZXJyb3JIYW5kbGVyID0gYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgZG9tVXJsLnJldm9rZU9iamVjdFVSTCh1cmwpO1xuICAgICAgICAgICAgY29uc3QgaW1nMiA9IHtcbiAgICAgICAgICAgICAgICAuLi5pbWFnZSxcbiAgICAgICAgICAgICAgICBlcnJvcjogZmFsc2UsXG4gICAgICAgICAgICAgICAgbG9hZGluZzogdHJ1ZSxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBhd2FpdCBsb2FkSW1hZ2UoaW1nMik7XG4gICAgICAgICAgICBpbWFnZVJlcy5sb2FkZWQgPSB0cnVlO1xuICAgICAgICAgICAgaW1hZ2VSZXMuZWxlbWVudCA9IGltZzIuZWxlbWVudDtcbiAgICAgICAgICAgIHJlc29sdmUoaW1hZ2VSZXMpO1xuICAgICAgICB9O1xuICAgICAgICBpbWcuYWRkRXZlbnRMaXN0ZW5lcihcImVycm9yXCIsICgpID0+IHZvaWQgZXJyb3JIYW5kbGVyKCkpO1xuICAgICAgICBpbWcuc3JjID0gdXJsO1xuICAgIH0pO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/Utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/index.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/index.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadImageShape: () => (/* binding */ loadImageShape)\n/* harmony export */ });\n/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Utils.js */ \"(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/Utils.js\");\n/* harmony import */ var _ImageDrawer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ImageDrawer.js */ \"(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/ImageDrawer.js\");\n/* harmony import */ var _ImagePreloader_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ImagePreloader.js */ \"(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/ImagePreloader.js\");\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tsparticles/engine */ \"(ssr)/./node_modules/.pnpm/@tsparticles+engine@3.8.1/node_modules/@tsparticles/engine/esm/index.js\");\n/* harmony import */ var _GifUtils_Utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./GifUtils/Utils.js */ \"(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Utils.js\");\n\n\n\n\n\nconst extLength = 3;\nfunction addLoadImageToEngine(engine) {\n    if (engine.loadImage) {\n        return;\n    }\n    engine.loadImage = async (data) => {\n        if (!data.name && !data.src) {\n            throw new Error(`${_tsparticles_engine__WEBPACK_IMPORTED_MODULE_3__.errorPrefix} no image source provided`);\n        }\n        if (!engine.images) {\n            engine.images = [];\n        }\n        if (engine.images.find((t) => t.name === data.name || t.source === data.src)) {\n            return;\n        }\n        try {\n            const image = {\n                gif: data.gif ?? false,\n                name: data.name ?? data.src,\n                source: data.src,\n                type: data.src.substring(data.src.length - extLength),\n                error: false,\n                loading: true,\n                replaceColor: data.replaceColor,\n                ratio: data.width && data.height ? data.width / data.height : undefined,\n            };\n            engine.images.push(image);\n            let imageFunc;\n            if (data.gif) {\n                imageFunc = _GifUtils_Utils_js__WEBPACK_IMPORTED_MODULE_4__.loadGifImage;\n            }\n            else {\n                imageFunc = data.replaceColor ? _Utils_js__WEBPACK_IMPORTED_MODULE_0__.downloadSvgImage : _Utils_js__WEBPACK_IMPORTED_MODULE_0__.loadImage;\n            }\n            await imageFunc(image);\n        }\n        catch {\n            throw new Error(`${_tsparticles_engine__WEBPACK_IMPORTED_MODULE_3__.errorPrefix} ${data.name ?? data.src} not found`);\n        }\n    };\n}\nasync function loadImageShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    addLoadImageToEngine(engine);\n    const preloader = new _ImagePreloader_js__WEBPACK_IMPORTED_MODULE_2__.ImagePreloaderPlugin(engine);\n    await engine.addPlugin(preloader, refresh);\n    await engine.addShape(new _ImageDrawer_js__WEBPACK_IMPORTED_MODULE_1__.ImageDrawer(engine), refresh);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRzcGFydGljbGVzK3NoYXBlLWltYWdlQDMuOC4xL25vZGVfbW9kdWxlcy9AdHNwYXJ0aWNsZXMvc2hhcGUtaW1hZ2UvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUF5RDtBQUNWO0FBQ1k7QUFDVDtBQUNDO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLDREQUFXLEVBQUU7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLDREQUFZO0FBQ3hDO0FBQ0E7QUFDQSxnREFBZ0QsdURBQWdCLEdBQUcsZ0RBQVM7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsNERBQVcsRUFBRSxFQUFFLHVCQUF1QjtBQUNyRTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSwwQkFBMEIsb0VBQW9CO0FBQzlDO0FBQ0EsOEJBQThCLHdEQUFXO0FBQ3pDIiwic291cmNlcyI6WyIvQXBwbGljYXRpb25zL3Byb2plY3RzL3lvdXRoLXNvbGlkYXJpdHktZmVzdGl2YWwvbm9kZV9tb2R1bGVzLy5wbnBtL0B0c3BhcnRpY2xlcytzaGFwZS1pbWFnZUAzLjguMS9ub2RlX21vZHVsZXMvQHRzcGFydGljbGVzL3NoYXBlLWltYWdlL2VzbS9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkb3dubG9hZFN2Z0ltYWdlLCBsb2FkSW1hZ2UgfSBmcm9tIFwiLi9VdGlscy5qc1wiO1xuaW1wb3J0IHsgSW1hZ2VEcmF3ZXIgfSBmcm9tIFwiLi9JbWFnZURyYXdlci5qc1wiO1xuaW1wb3J0IHsgSW1hZ2VQcmVsb2FkZXJQbHVnaW4gfSBmcm9tIFwiLi9JbWFnZVByZWxvYWRlci5qc1wiO1xuaW1wb3J0IHsgZXJyb3JQcmVmaXggfSBmcm9tIFwiQHRzcGFydGljbGVzL2VuZ2luZVwiO1xuaW1wb3J0IHsgbG9hZEdpZkltYWdlIH0gZnJvbSBcIi4vR2lmVXRpbHMvVXRpbHMuanNcIjtcbmNvbnN0IGV4dExlbmd0aCA9IDM7XG5mdW5jdGlvbiBhZGRMb2FkSW1hZ2VUb0VuZ2luZShlbmdpbmUpIHtcbiAgICBpZiAoZW5naW5lLmxvYWRJbWFnZSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGVuZ2luZS5sb2FkSW1hZ2UgPSBhc3luYyAoZGF0YSkgPT4ge1xuICAgICAgICBpZiAoIWRhdGEubmFtZSAmJiAhZGF0YS5zcmMpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgJHtlcnJvclByZWZpeH0gbm8gaW1hZ2Ugc291cmNlIHByb3ZpZGVkYCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFlbmdpbmUuaW1hZ2VzKSB7XG4gICAgICAgICAgICBlbmdpbmUuaW1hZ2VzID0gW107XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGVuZ2luZS5pbWFnZXMuZmluZCgodCkgPT4gdC5uYW1lID09PSBkYXRhLm5hbWUgfHwgdC5zb3VyY2UgPT09IGRhdGEuc3JjKSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBpbWFnZSA9IHtcbiAgICAgICAgICAgICAgICBnaWY6IGRhdGEuZ2lmID8/IGZhbHNlLFxuICAgICAgICAgICAgICAgIG5hbWU6IGRhdGEubmFtZSA/PyBkYXRhLnNyYyxcbiAgICAgICAgICAgICAgICBzb3VyY2U6IGRhdGEuc3JjLFxuICAgICAgICAgICAgICAgIHR5cGU6IGRhdGEuc3JjLnN1YnN0cmluZyhkYXRhLnNyYy5sZW5ndGggLSBleHRMZW5ndGgpLFxuICAgICAgICAgICAgICAgIGVycm9yOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBsb2FkaW5nOiB0cnVlLFxuICAgICAgICAgICAgICAgIHJlcGxhY2VDb2xvcjogZGF0YS5yZXBsYWNlQ29sb3IsXG4gICAgICAgICAgICAgICAgcmF0aW86IGRhdGEud2lkdGggJiYgZGF0YS5oZWlnaHQgPyBkYXRhLndpZHRoIC8gZGF0YS5oZWlnaHQgOiB1bmRlZmluZWQsXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgZW5naW5lLmltYWdlcy5wdXNoKGltYWdlKTtcbiAgICAgICAgICAgIGxldCBpbWFnZUZ1bmM7XG4gICAgICAgICAgICBpZiAoZGF0YS5naWYpIHtcbiAgICAgICAgICAgICAgICBpbWFnZUZ1bmMgPSBsb2FkR2lmSW1hZ2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBpbWFnZUZ1bmMgPSBkYXRhLnJlcGxhY2VDb2xvciA/IGRvd25sb2FkU3ZnSW1hZ2UgOiBsb2FkSW1hZ2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhd2FpdCBpbWFnZUZ1bmMoaW1hZ2UpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgJHtlcnJvclByZWZpeH0gJHtkYXRhLm5hbWUgPz8gZGF0YS5zcmN9IG5vdCBmb3VuZGApO1xuICAgICAgICB9XG4gICAgfTtcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBsb2FkSW1hZ2VTaGFwZShlbmdpbmUsIHJlZnJlc2ggPSB0cnVlKSB7XG4gICAgZW5naW5lLmNoZWNrVmVyc2lvbihcIjMuOC4xXCIpO1xuICAgIGFkZExvYWRJbWFnZVRvRW5naW5lKGVuZ2luZSk7XG4gICAgY29uc3QgcHJlbG9hZGVyID0gbmV3IEltYWdlUHJlbG9hZGVyUGx1Z2luKGVuZ2luZSk7XG4gICAgYXdhaXQgZW5naW5lLmFkZFBsdWdpbihwcmVsb2FkZXIsIHJlZnJlc2gpO1xuICAgIGF3YWl0IGVuZ2luZS5hZGRTaGFwZShuZXcgSW1hZ2VEcmF3ZXIoZW5naW5lKSwgcmVmcmVzaCk7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/index.js\n");

/***/ })

};
;